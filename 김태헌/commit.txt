//useMemo
// -> 프로그램의 memorization이라는 것이 있는데
// 기억해둔 결과 값을 내보내주는 것.
// 특정 postid에 대한 post의 조회수를 알고싶은
// 특정 id를 담아서 서버의 요청을 받아서 조회수가 얼마인지 보여주는
// post 413은 217 조회수가 있어서
// 대출 한도 금액 화면
// 첫번째 인자는 함수를 넘겨준다. -> 두번쨰 인자는 useEffect랑 동일
// 연산 값을 기억하는 것.

// useCallback
// 특정 함수를 재사용하고 싶을때

// React.memo

const useInput = (label) => {
  const [input, setInput] = useState("");
  const onChange = (e) => setInput(e.target.value);
  return [input, onChange];
};
export default User;

//context API

// App > User> Posts > Comment > ...
// 컴포넌트가 계속 생기면 Context API를 사용한다.
// redux도 사용하긴 함

// react router dom -> 규모를 키워나간다.
// componentDidCatch -> 요즘에는 몰라도 된다.

// Prettier로 통일시켜준다.
// ESLint -> 규칙, 문법 강제성을 좀 띈다.

스타일링 방법 3가지 -> Saas, CSS Modlue, Styled-components
